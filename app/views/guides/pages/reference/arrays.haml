- set_meta_tags title: 'Guide / Reference / Arrays'

%h1 Arrays

%p
  An Array is a generic type containing elements of any other type.

%h2 Type

%p
  The type of a generic array is
  %code Array(a)
  where the parameter is the type of it's items.

%h2 Syntax

%p
  Arrays are typically created with an array literal:

%pre
  %code
    :plain
      [1, 2, 3]
      ["A", "B", "C"]

%h2 Accessing Items

%p
  We can access an arrays item at a given index using the following syntax:

%pre
  %code
    :plain
      array =
        [1, 2, 3]

      array[0]

%p
  When accessing an item this way the type of the item will be
  %code Maybe(a)
  where
  %code a
  is the type of item in the array.

%p
  This is so because there might not be an item at that index.

%h2 Pattern Matching

%p
  We can use pattern matching in a
  %code case
  expression in order to match certain values or get items of the array:

%pre
  %code
    :plain
      [] => ""                /* Empty array  */
      ["a"] => ""             /* Array with only one specific element */
      [a] => ""               /* Array with only one element */
      [a, b] => ""            /* Array with only two elements  */
      [a, ...middle, b] => "" /* Array at least with three elements */
      [...head, tail] => ""   /* Array at least two elements */
      [head, ...tail] => ""   /* Array at least two elements */
      [...items] => ""        /* Items would be the array */
      => ""                   /* Fallback as usual */

%p
  Using the
  %code ...
  spread operator will make the
  %code case
  exhaustive.
