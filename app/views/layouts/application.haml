!!!
%html(lang="en")
  %head
    = display_meta_tags site: 'Mint',
                        keywords: %w(mint mint-lang packages),
                        description: 'The programming language for writing single page applications.',
                        canonical: request.path,
                        charset: 'utf-8',
                        author: 'GusztÃ¡v Szikszai',
                        separator: '/',
                        og: { title: :title,
                              site_name: :site }

    = csrf_meta_tags
    = favicon_link_tag 'favicon.png'

    - if Rails.env.production?
      / Global site tag (gtag.js) - Google Analytics
      %script{:async => "", :src => "https://www.googletagmanager.com/gtag/js?id=#{ENV['GA_TRACKING_CODE']}"}
      :javascript
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', '#{ENV['GA_TRACKING_CODE']}');

    %meta{ content: 'width=device-width; initial-scale=1.0; maximum-scale=1.0;',
           name: 'viewport' }

    = stylesheet_link_tag '//fonts.googleapis.com/css?family=Open+Sans:400,600,700|Source+Code+Pro:400,600|M+PLUS+Rounded+1c:500,700&display=swap'
    = stylesheet_link_tag 'application', media: 'all'

    = stylesheet_link_tag 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.10/styles/atom-one-dark.min.css'
    = javascript_include_tag '//cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.16.2/build/highlight.min.js'

  %body
    .mobile-menu
      .mobile-menu__close
        = octicon "x", width: 24

      = link_to ENV['SANDBOX_URL'],
                class: 'mobile-menu__item',
                target: '_blank',
                active: :exact do
        = octicon "terminal"
        %span Try

      = active_link_to install_path,
                class: 'mobile-menu__item',
                active: :exact do
        = octicon "cloud-download"
        %span Install

      = active_link_to guide_path, class: 'mobile-menu__item' do
        = octicon "book"
        %span Learn

      = active_link_to blog_path, class: 'mobile-menu__item' do
        = octicon "bookmark"
        %span Blog

      = active_link_to '/api', class: 'mobile-menu__item' do
        = octicon "repo"
        %span Api

      = active_link_to packages_path, class: 'mobile-menu__item' do
        = octicon "archive"
        %span Packages

      = link_to 'https://github.com/mint-lang/mint',
                class: 'mobile-menu__item',
                target: '_blank',
                active: :exact do
        = octicon "mark-github"
        %span Github

    .nav
      .nav__wrapper
        = link_to root_path, class: :nav__brand do
          = render partial: 'shared/logo', locals: { size: 20 }

        .nav__mobile-menu-toggle
          %span Menu
          = render partial: 'icons/menu'

        = link_to ENV['SANDBOX_URL'],
                  class: :nav__item,
                  target: '_blank',
                  active: :exact do
          = octicon "terminal"
          %span Try

        = active_link_to install_path,
                  class: :nav__item,
                  active: :exact do
          = octicon "cloud-download"
          %span Install

        = active_link_to guide_path, class: :nav__item do
          = octicon "book"
          %span Learn

        = active_link_to blog_path, class: :nav__item do
          = octicon "bookmark"
          %span Blog

        = active_link_to '/api', class: :nav__item do
          = octicon "repo"
          %span Api

        = active_link_to packages_path, class: :nav__item do
          = octicon "archive"
          %span Packages

        = link_to 'https://github.com/mint-lang/mint',
                  class: :nav__item,
                  target: '_blank',
                  active: :exact do
          = octicon "mark-github"
          %span Github

    %article
      = yield

    = render partial: 'layouts/footer'

    = javascript_include_tag 'application'

    :javascript
      hljs.registerLanguage('mint',() => {
        const MINT_CONTAINS = []
        const MINT_KEYWORDS = 'const global component store module fun state property next if else sequence parallel style record connect enum routes try catch case where when use for of true false then finally get exposing as decode encode'

         var XML_IDENT_RE = '[A-Za-z0-9\\._:-]+';
         var TAG_INTERNALS = {
          endsWithParent: true,
          illegal: /</,
          relevance: 0,
          contains: [
            {
              className: 'attr',
              begin: XML_IDENT_RE,
              relevance: 0
            },
            {
              begin: /=\s*/,
              relevance: 0,
              contains: [
                {
                  endsParent: true,
                  className: 'tag',
                  begin: '\\{',
                  end: '\\}',
                  contains: MINT_CONTAINS
                },
                {
                  className: 'string',
                  endsParent: true,
                  variants: [
                    {begin: /"/, end: /"/},
                    {begin: /'/, end: /'/}
                  ]
                }
              ]
            }
          ]
        };

        MINT_CONTAINS.push(
          ...[
            hljs.COMMENT("/\\*", "\\*/"),
            {
              className: 'number',
              begin: "\\b\\d+(\\.\\d+)?",
              end: "\\B|\\b"
            },
            {
              className: 'string',
              begin: '"',
              end: '"'
            },
            {
              className: 'type',
              begin: "\\b[A-Z][A-Za-z0-9]+",
              ends: "[^A-Za-z0-9]"
            },
            {
              className: 'tag',
              begin: '<{', end: '}>',
              contains: MINT_CONTAINS
            },
            {
              className: 'tag',
              begin: '</?', end: '/?>',
              contains: [
                {
                  className: 'name', begin: /[^\/><\s]+/, relevance: 0
                },
                TAG_INTERNALS
              ]
            },
            {
              keywords: MINT_KEYWORDS,
              begin: 'style\\s+[a-zA-Z0-9-]+\\s*{',
              end: '}',
              contains: [
                {
                  begin: '(?=[-a-zA-Z0-9]+\\s*:\\s*[^;]+)',
                  end: ';',
                  contains: [
                    {
                      begin: '[-a-zA-Z0-9]+\\s*',
                      className: 'string',
                      excludeEnd: true,
                      end: ':',
                    },
                    {
                      begin: '[^;]+',
                      end: ';',
                      excludeEnd: true,
                      endsParent: true,
                    },
                  ]
                }
              ]
            }
         ])

        return {
          k: MINT_KEYWORDS,
          contains: MINT_CONTAINS
        }
      })

      hljs.configure({languages: ['mint']})
      hljs.initHighlightingOnLoad();

    :javascript
      navigator.serviceWorker.getRegistrations().then(function(registrations) {
        for(let registration of registrations) {
          registration.unregister()
        }
      })
